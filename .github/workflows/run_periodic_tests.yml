# Run all unit tests and integration tests for all Python versions
# and platforms at 3am UTC every day and on PRs to the main branch
name: Scheduled

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

  # Run every day at 3 am UTC
  schedule:
    - cron: "0 3 * * *"

env:
  FORCE_COLOR: 3
  PYBAMM_IDAKLU_EXPR_CASADI: ON
  PYBAMM_IDAKLU_EXPR_IREE: ON

concurrency:
  # github.workflow: name of the workflow, so that we don't cancel other workflows
  # github.event.pull_request.number || github.ref: pull request number or branch name if not a pull request
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  # Cancel in-progress runs when a new workflow with the same group name is triggered
  # This avoids workflow runs on both pushes and PRs
  cancel-in-progress: true

jobs:
  run_windows_unit_integration_tests:
    env:
      PYBAMM_USE_VCPKG: ON
      VCPKG_ROOT_DIR: C:\vcpkg
      VCPKG_DEFAULT_TRIPLET: x64-windows-static-md
      VCPKG_FEATURE_FLAGS: manifests,registries
      CMAKE_GENERATOR: "Visual Studio 17 2022"
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    name: Tests (windows-latest / Python ${{ matrix.python-version }})

    steps:
      - name: Check out PyBaMM repository
        uses: actions/checkout@v4

      - name: Install Windows system dependencies
        run: choco install graphviz --version=8.0.5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install vcpkg on Windows
        run: |
          cd C:\
          rm -r -fo 'C:\vcpkg'
          git clone https://github.com/microsoft/vcpkg
          cd vcpkg
          .\bootstrap-vcpkg.bat

      - name: Install nox
        run: python -m pip install nox

      - name: Run unit tests for windows-latest with Python ${{ matrix.python-version }}
        run: python -m nox -s unit

      - name: Run integration tests for windows-latest with Python ${{ matrix.python-version }}
        run: python -m nox -s integration

  run_macos_unit_integration_tests:
    runs-on: ${{ matrix.os }}
    env:
        PYBAMM_IDAKLU_EXPR_CASADI: ON
        PYBAMM_IDAKLU_EXPR_IREE: ON
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12, macos-14]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    name: Tests (${{ matrix.os }} / Python ${{ matrix.python-version }})

    steps:
      - name: Check out PyBaMM repository
        uses: actions/checkout@v4

      - name: Install macOS system dependencies
        env:
          HOMEBREW_NO_INSTALL_CLEANUP: 1
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_COLOR: 1
          # Speed up CI
          NONINTERACTIVE: 1
        # sometimes gfortran cannot be found, so reinstall gcc just to be sure
        run: |
          brew analytics off
          brew install graphviz libomp
          brew reinstall gcc

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install nox
        run: python -m pip install nox

      - name: Install SuiteSparse and SUNDIALS on macOS
        timeout-minutes: 10
        run: python -m nox -s pybamm-requires

      - name: Run unit tests for ${{ matrix.os }} with Python ${{ matrix.python-version }}
        run: python -m nox -s unit

      - name: Run integration tests for ${{ matrix.os }} with Python ${{ matrix.python-version }}
        run: python -m nox -s integration

  run_linux_unit_integration_coverage_tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    name: Tests (ubuntu-latest / Python ${{ matrix.python-version }})

    steps:
      - name: Check out PyBaMM repository
        uses: actions/checkout@v4

      - name: Install Linux system dependencies
        run: sudo apt install gfortran gcc graphviz pandoc libopenblas-dev texlive-latex-extra dvipng

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up uv
        run: python -m pip install uv

      - name: Install nox
        run: python -m uv pip install nox[uv]

      - name: Install SuiteSparse and SUNDIALS on GNU/Linux
        timeout-minutes: 10
        run: python -m nox -s pybamm-requires

      - name: Run unit tests for GNU/Linux with Python ${{ matrix.python-version }}
        if: matrix.python-version != '3.12'
        run: python -m nox -s unit

      - name: Run coverage tests for GNU/Linux with Python ${{ matrix.python-version }}
        if: matrix.python-version == '3.12'
        run: python -m nox -s coverage

      - name: Upload coverage report
        if: matrix.python-version == '3.12'
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run integration tests for GNU/Linux with Python ${{ matrix.python-version }}
        run: python -m nox -s integration

  # Skips IDAKLU module compilation for speedups, which is already tested in other jobs.
  run_doctests:
    env:
      BUILD_IDAKLU: OFF
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    name: Doctests (ubuntu-latest / Python 3.11)

    steps:
      - name: Check out PyBaMM repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Linux system dependencies
        run: sudo apt install graphviz pandoc texlive-latex-extra dvipng

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Set up uv
        run: python -m pip install uv

      - name: Install nox
        run: python -m uv pip install nox[uv]

      - name: Install docs dependencies and run doctests for GNU/Linux
        run: python -m nox -s doctests

      - name: Check if the documentation can be built for GNU/Linux
        run: python -m nox -s docs

  run_example_tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    name: Example notebooks (ubuntu-latest / Python 3.12)

    steps:
      - name: Check out PyBaMM repository
        uses: actions/checkout@v4

      - name: Install Linux system dependencies
        run: sudo apt install gfortran gcc graphviz pandoc libopenblas-dev texlive-latex-extra dvipng

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Set up uv
        run: python -m pip install uv

      - name: Install nox
        run: python -m uv pip install nox[uv]

      - name: Install SuiteSparse and SUNDIALS on GNU/Linux
        timeout-minutes: 10
        run: python -m nox -s pybamm-requires

      - name: Run example notebooks tests for GNU/Linux with Python 3.12
        run: python -m nox -s examples

  run_scripts_tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    name: Example scripts (ubuntu-latest / Python 3.12)

    steps:
      - name: Check out PyBaMM repository
        uses: actions/checkout@v4

      - name: Install Linux system dependencies
        run: sudo apt install gfortran gcc graphviz libopenblas-dev texlive-latex-extra dvipng

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Set up uv
        run: python -m pip install uv

      - name: Install nox
        run: python -m uv pip install nox[uv]

      - name: Install SuiteSparse and SUNDIALS on GNU/Linux
        timeout-minutes: 10
        run: python -m nox -s pybamm-requires

      - name: Run example scripts tests for GNU/Linux with Python 3.12
        run: python -m nox -s scripts
